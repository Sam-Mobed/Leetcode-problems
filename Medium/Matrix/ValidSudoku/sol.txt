I don't think there is some special technique to use for this. you just have to efficiently iterate through the sudoku board.
you check each row, you check each column, and you check each box, but you don't do this through one million if statements. 

checking the rows and columns is easy. but how would you check the 3x3 boxes? by using integer division.
row_index//3 and col_index//3 will give the exact box to which the cooridnate belongs to. we divide by three because three is the size of each box.

My problem was that I tried to be cheap, I didn't think it would be write to have a set/dictionary for each row,column and box when indeed that was 
what was needed. The solution uses 3 dictionaries of sets. 

the row and column dictionaries have 0-8 as keys, and the values are sets for the corresponding digits in those rows/columns

the box dictionary has a tuple as key, representing the row/col of that specific box (row//3, col//3), and the values are sets. 

The problem is trickier than it looks.